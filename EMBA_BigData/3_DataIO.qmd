---
title: "3. Data I/O"
author: "Yi-Ju Tseng"
format:
  revealjs:
    slide-number: c/t
    show-slide-number: all
editor: visual
---

## 資料分析步驟

- **資料匯入** 
- 資料清洗處理
- 資料分析
- 資料呈現與視覺化

## 資料匯入

- 從檔案匯入
- 從網路匯入
- 從Twitter匯入
- 從Google drive匯入
- 資料匯出

# 從檔案匯入

## 從檔案匯入

- .csv 逗號分隔格式檔案
- .xls Excel格式檔案
- 純文字資料 (無分隔)
- 其他格式

## Hands-on - .csv檔案匯入



# 從網路匯入

## 從網路匯入

- Open Data
- API (Application programming interfaces)
- JSON格式檔案
- 網頁爬蟲 Webscraping

## Open Data 開放資料

- 2011年推動開放政府與開放資料 ([維基百科](https://zh.wikipedia.org/wiki/%E9%96%8B%E6%94%BE%E8%B3%87%E6%96%99))
- 不受著作權、專利權，以及其他管理機制所限制，任何人都可以自由出版使用
- 常見的儲存方式為: 
    - `CSV`
    - `JSON`
    - `XML`
    
## Open Data 開放資料常見平台

- [政府資料開放平台](https://data.gov.tw/)
- [Data Taipei](https://data.taipei/)
- [開放資料 x 開放桃園](https://data.tycg.gov.tw/)

## API
- 應用程式介面
- **A**pplication **P**rogramming **I**nterfaces
- 為了讓第三方的開發者可以額外開發應用程式來強化他們的產品，推出可以與系統溝通的介面
- 有API輔助可將資料擷取過程自動化
    -  以下載Open Data為例，若檔案更新頻繁，使用手動下載相當耗時
- [維基百科](https://zh.wikipedia.org/zh-tw/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%8F%A3)

## API - Open Data

::: columns
::: column

- [桃園公共自行車即時服務資料](http://data.tycg.gov.tw/opendata/datalist/datasetMeta?oid=5ca2bfc7-9ace-4719-88ae-4034b9a5a55c)資料
- 每日更新
- 不可能每日手動下載
- 提供透過**API**下載的服務
- 透過API下載的資料格式: **JSON格式**

:::
::: column

- [桃園公共自行車即時服務資料API資訊](http://data.tycg.gov.tw/opendata/datalist/datasetMeta/outboundDesc?id=5ca2bfc7-9ace-4719-88ae-4034b9a5a55c&rid=a1b4714b-3b75-4ff8-a8f2-cc377e4eaa0f)
    - **資料集ID**: 紀錄資料的基本參數，如包含欄位、更新頻率等
    - **資料RID**: 資料集
    - 擷取範例

:::
:::


## JSON格式檔案

- JSON (**J**ava**s**cript **O**bject **N**otation)
- 輕量級的資料交換語言
- From **a**pplication **p**rogramming **i**nterfaces (APIs)
- JavaScript、Java、Node.js應用
- 一些NoSQL資料庫用JSON儲存資料：**MongoDB**
- [Wiki](http://en.wikipedia.org/wiki/JSON)

## JSON檔案匯入

- `jsonlite` package (套件使用前必須安裝)
- `fromJSON()`函數載入JSON資料
- 如果API網址為**https**，則需使用 `httr` package
    - 使用`GET()`函數處理資料擷取網址
- API網址參考[桃園公共自行車即時服務資料API資訊](http://data.tycg.gov.tw/opendata/datalist/datasetMeta/outboundDesc?id=5ca2bfc7-9ace-4719-88ae-4034b9a5a55c&rid=a1b4714b-3b75-4ff8-a8f2-cc377e4eaa0f)
```{r message=FALSE,warning=FALSE,eval=T}
library(jsonlite)
APIData<-fromJSON("http://data.tycg.gov.tw/api/v1/rest/datastore/a1b4714b-3b75-4ff8-a8f2-cc377e4eaa0f?format=json")
```

## Hands-on - JSON檔案匯入練習

- 練習用資料：[桃園市路外停車資訊](https://data.tycg.gov.tw/opendata/datalist/datasetMeta/download?id=f4cc0b12-86ac-40f9-8745-885bddc18f79&rid=0daad6e6-0632-44f5-bd25-5e1de1e9146f)
- 使用檔案匯入**範例**，將資料匯入R中
    - 提示：**fromJSON**
- 使用str()函數觀察匯入的資料
- 請問有幾筆觀察值？幾個欄位？



## 網頁爬蟲 Webscraping

- 不是每個網站都提供API
- 人工複製貼上?!
- 程式化的方式擷取網頁資料: **網頁爬蟲（Webscraping）**（[Webscraping Wiki](http://en.wikipedia.org/wiki/Web_scraping)）
- 可能耗費很多網頁流量和資源 －很可能被鎖IP
- 在R的處理辦法
    - 當作XML檔案處理分析
    - 使用`rvest` package輔助
    
## 網頁爬蟲 Webscraping-rvest

- 擷取條件的撰寫會因網頁語法不同而有差異
- 使用**Google Chrome開發工具**輔助觀察擷取資料的條件
    - 或使用**SelectorGadget**輔助
    - 或使用**xpath-helper**輔助xpath標籤的擷取
- 觀察需要擷取的資料所在HTML片段
    - css class為`.eIzpqT`


## 盤中奈米股資料爬取 -1

[零股資料](https://fubon-ebrokerdj.fbs.com.tw/z/ze/zeg/zega_EBTW50E_I.djhtm)

```{r}
library(rvest) 
NanoStockUrl<-"https://fubon-ebrokerdj.fbs.com.tw/z/ze/zeg/zega_EBTW50E_I.djhtm"
NanoStockContent<-read_html(NanoStockUrl)
NanoStockName<-
  NanoStockContent %>% html_nodes("#oAddCheckbox") %>% html_text()
NanoStockPrice<-
  NanoStockContent %>% html_nodes(".t3n1")%>% html_text()

head(NanoStockName)
head(NanoStockPrice)
```

## 盤中奈米股資料爬取 -2

```{r}
NanoStockPriceTable<-
  matrix(NanoStockPrice,ncol=6, byrow=TRUE)
NanoStockNameClean<-gsub('\\r|<|!|\\n|\\t|GenLink2stk|;|/|-|>',
                         '',
                         NanoStockName)
NanoStockData <- 
    data.frame(name = NanoStockNameClean,
               NanoStockPriceTable)

```

## 盤中奈米股資料爬取 -3

```{r eval=F}
NanoStockData
```
```{r echo=F}
knitr::kable(NanoStockData) 
```

    
## Hands-on 爬蟲練習

- [Ptt Tech_Job 版](https://www.ptt.cc/bbs/Tech_Job/index.html)
- 試著爬出所有**標題**
- 爬出的第三個標題是？


## 網頁爬蟲 再想想？

- 其實... 很多資料有其他存取方式，像API
    - https://www.dcard.tw/_api/forums/cgu/posts
    - https://www.dcard.tw/_api/posts/225917717
    - https://www.dcard.tw/_api/posts/225917717/comments
- 隱私問題 （OkCupid事件）
    - [70,000 OkCupid Users Just Had Their Data Published](https://motherboard.vice.com/en_us/article/70000-okcupid-users-just-had-their-data-published)
    
    
## 從Twitter匯入

- Twitter API
- rtweet package

## Twitter API

- https://developer.twitter.com/en/apps
- 需有Twitter帳號並通過開發者審核

## rtweet package

```{r eval=F}
## install rtweet from CRAN
install.packages("rtweet")
## load rtweet package
library(rtweet)
```

## rtweet package - token 設定

```{r}
library(rtweet)
create_token(
  app = "teach0309",
  consumer_key = "Wbba6ysyPKGstGAqohmtyWZOE",
  consumer_secret = "GJweDzVvXGrbjz26bHTr3d6dFI7q9gFCH98f3Ct2yk3APPWigc",
  access_token = "216362944-AxxvSiPBR7nBScfBks7thajSovUwFG6v67aNR3WP",
  access_secret = "pF0OldOjiJxaBbPlQhx7V3VkA6MIgdzHHofar1DM0pX0G")
```

## rtweet package - 搜尋hashtag

```{r eval=F}
## search for 3000 tweets using the Taiwan hashtag
rt <- search_tweets(
  "#Taiwan", n = 3000, include_rts = FALSE
)
head(rt)
```
```{r echo=F}
rt <- search_tweets(
  "#Taiwan", n = 3000, include_rts = FALSE
)
knitr::kable(rt[1:6,1:4])
```

## rtweet package - 搜尋hashtag

```{r echo=F}
library(ggplot2)
ts_plot(rt, "3 hours") +
  ggplot2::theme_minimal() +
  ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
  ggplot2::labs(
    x = NULL, y = NULL,
    title = "Frequency of #Taiwan Twitter statuses",
    subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
    caption = "\nSource: Data collected from Twitter's REST API via rtweet"
  )
```

## rtweet package - 取得趨勢

```{r eval=F}
sf <- get_trends("USA")
head(sf)
```
```{r echo=F}
sf <- get_trends("USA")
knitr::kable(sf[1:4,1:4])
```

## rtweet package - 取得timeline

```{r eval=F}
tmls_Bezos <- get_timelines("JeffBezos", n = 1000)
tmls_Musk <- get_timelines( "elonmusk", n = 1000)
head(tmls_Bezos)
head(tmls_Musk)
```
```{r echo=F}
tmls_Bezos <- get_timelines("JeffBezos", n = 1000)
tmls_Musk <- get_timelines( "elonmusk", n = 1000)
knitr::kable(tmls_Bezos[1:6,c("full_text","source")])
knitr::kable(tmls_Musk[1:6,c("full_text","source")])
```

## rtweet package - 取得timeline

```{r echo=F}
## plot the frequency of tweets for each user over time
tmls_Musk %>%
  dplyr::filter(created_at > "2022-11-01") %>%
  ts_plot("days", trim = 1L) +
  ggplot2::geom_point() +
  ggplot2::theme_minimal() +
  ggplot2::theme(
    legend.title = ggplot2::element_blank(),
    legend.position = "bottom",
    plot.title = ggplot2::element_text(face = "bold")) +
  ggplot2::labs(
    x = NULL, y = NULL,
    title = "Frequency of Twitter statuses posted",
    subtitle = "Twitter status (tweet) counts aggregated by day from  2022-11-01",
    caption = "\nSource: Data collected from Twitter's REST API via rtweet"
  )

```


## rtweet package - favorites

```{r eval=F}
## get user IDs of accounts favorited by Elon Musk
em_flw <- get_favorites("elonmusk", n = 100)
head(em_flw)
```
```{r echo=F,eval=T}
## get user IDs of accounts favorited by Elon Musk
em_flw <- get_favorites("elonmusk", n = 100)
knitr::kable(em_flw[1:6,c("text", "created_at", "id_str")])
```


## Hands-on - X資料匯入練習

type:alert
incremental:true
- 複製老師的Twitter access token
- 使用rtweet package取得**蔡英文 Tsai Ing-wen**(iingwen)的timeline，共50筆tweets
- 第一筆資料的retweet_count是多少?
- 第二筆資料的favorite_count是多少?


## 從網路匯入 - Recap

- Open Data
- API (Application programming interfaces)
- JSON格式檔案
- 網頁爬蟲 Webscraping

# 從Google drive匯入

## 從Google drive匯入


- googlesheets4 package


## googlesheets4 package

```{r eval=F}
## install googlesheets4 from CRAN (already included in tidyverse)
install.packages("googlesheets4")
## load googlesheets4 package
library(googlesheets4)
```
```{r echo=F,eval=T}
library(googlesheets4)
```

## googlesheets4 package

使用`read_sheet()`讀入[範例google sheet](https://docs.google.com/spreadsheets/d/13gnwAUXaxHATsZIGO3mPtdxLMxseE1oYNjgTV4tdFkk/edit#gid=0)
```{r}
read_sheet("https://docs.google.com/spreadsheets/d/13gnwAUXaxHATsZIGO3mPtdxLMxseE1oYNjgTV4tdFkk/edit#gid=0")
```

## 需要開啟google 授權

```{r echo=FALSE}
knitr::include_graphics("figures/OAuth.png")
```
```{r echo=FALSE}
knitr::include_graphics("figures/OAuthGoogle.png")
```


## googlesheets4 package

使用`read_sheet()`讀入[範例google sheet](https://docs.google.com/spreadsheets/d/13gnwAUXaxHATsZIGO3mPtdxLMxseE1oYNjgTV4tdFkk/edit#gid=0)
```{r eval=F}
read_sheet("https://docs.google.com/spreadsheets/d/13gnwAUXaxHATsZIGO3mPtdxLMxseE1oYNjgTV4tdFkk/edit#gid=0")
```
```{r echo=F}
knitr::kable(read_sheet("https://docs.google.com/spreadsheets/d/13gnwAUXaxHATsZIGO3mPtdxLMxseE1oYNjgTV4tdFkk/edit#gid=0"))
```



# 資料匯出

## 資料匯出

- 文字檔 .txt
- CSV檔 .csv
- R物件 .rds

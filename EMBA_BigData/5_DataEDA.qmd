---
title: "5. Data EDA"
author: "Yi-Ju Tseng"
format:
  revealjs:
    slide-number: c/t
    show-slide-number: all
editor: visual
---

## 資料分析步驟

-   資料匯入
-   資料清洗處理
-   **資料分析**
-   資料呈現與視覺化


## 資料分析大綱

- 什麼是探索式資料分析
- 量化的分析方式 (基礎統計)

TBD

## 前置作業

為了成功從https (加密封包傳輸)下載資料，首先取消證書驗證

```{python}
#| echo: true
import ssl
ssl._create_default_https_context = ssl._create_unverified_context
```

## 什麼是探索式資料分析

- 探索式資料分析 (**E**xploratory **D**ata **A**nalysis)
- 在資料量 大/雜/髒 的時候，探索式資料分析非常重要
- 運用**視覺化**、**基本的統計**等工具，反覆的探索**資料特性**，獲取資料所包含的資訊、結構和特點
- 在進行複雜或嚴謹的分析之前，必須要對資料有更多認識，才能訂定**對的資料分析方向**
- 通常**不需要**嚴謹的假設和細節呈現


## 探索式資料分析

- 分析各變數間的**關聯性**，看是否有預料之外的有趣發現
- 觀察資料內容是否符合預期，若否，檢查資料**是否有誤**
- 檢查資料是否符合分析前的假設

透過探索性分析來**調整分析的方向**，減少因分析方向錯誤所造成的時間浪費。

## 探索式資料分析

- 圖形化Graphical
    - 單變量Univariate
    - 雙變量Bivariate
    - 多變量Multivariate
    
- 量化Quantitative (基礎統計)
    - 單變量Univariate
    - 雙變量Bivariate
    - 多變量Multivariate

## 圖形化的分析

包括做圖與列表，將會在下章節介紹，本章節著重於量化的分析方式。


## 量化的分析方式: 單變量

資料初步統計，量化的分析方式可包含

- 計算集中趨勢 Central Tendency
    - 平均值 Mean `資料序列.mean()` or `st.mean(資料序列)`
    - 中位數 Median `資料序列.median()` or `st.median(資料序列)`
    - 眾數 Mode，R無內建函數，可直接用`table()`找出現次數最多的資料
    
## 量化的分析方式: 單變量- 集中趨勢

```{python} 
#| echo: true
import statistics as st
import pandas as pd
data = pd.read_csv("https://raw.githubusercontent.com/yijutseng/StatwithPython/main/baseball_data.csv")
print(data)
```

## 量化的分析方式: 單變量- 集中趨勢

平均值 Mean `資料序列.mean()` or `st.mean(資料序列)`

```{python} 
#| echo: true
st.mean(data['height'])
```
```{python} 
#| echo: true
data['height'].mean()
```


## 量化的分析方式: 單變量- 集中趨勢

-   The pandas series’s function can deal with multiple columns
    -   get multiple columns using `[[column 1,column 2]]`

```{python} 
#| echo: true
data[['height','weight']].mean()
```

## 量化的分析方式: 單變量- 集中趨勢

中位數 Median `資料序列.median()` or `st.median(資料序列)`

```{python} 
#| echo: true
st.median(data['height'])
```
```{python} 
#| echo: true
data['height'].median()
```

## 量化的分析方式: 單變量- 分散程度

計算資料分散程度可包含
  - 最小值 Min `min()`
  - 最大值 Max `max()`
  - 範圍 Range `range()`
  - 四分位差 Quartiles `quantile()`
  - 變異數 Variance `st.var(資料)` or `pandas資料序列.var()`
  - 標準差 Standard deviation `st.stdev(資料)` or `pandas資料序列.std()`
    
## 量化的分析方式: 單變量- 分散程度

::: columns
::: column

```{python} 
#| echo: true
st.variance(data['height'])
```

```{python} 
#| echo: true
data['height'].var()
```
:::
::: column
```{python} 
#| echo: true
st.stdev(data['height'])
```

```{python} 
#| echo: true
data['height'].std()
```
:::
:::

## 量化的分析方式: 單變量- 分散程度


-   `st.quantiles(pandas series, n=the number of partitions)`
-   `pandas資料序列.quantile(percentiles you want to get)`

```{python} 
#| echo: true
st.quantiles(data['height'],n=4)
```

```{python} 
#| echo: true
data['height'].quantile([0.25,0.5,0.75])
```

## 量化的分析方式: 單變量- 一次搞定

-   It is impossible to get all the statistics one by one
-   pandas series provide a warp up function
    -   `pandas資料序列.describe()`
    
```{python} 
#| echo: true
data['height'].describe()
```

## 量化的分析方式: 單變量- 一次搞定

```{python} 
#| echo: true
data.describe()
```

## 雙變量量化分析

- 列聯表 Crosstabs 
    -   `pd.crosstab(pandas資料序列1,pandas資料序列2)`
- 相關性 Correlation 
    -   `pandas資料序列.corr(另一個pandas資料序列)`

## 資料前處理 - 1/3
```{python} 
#| echo: true
data['bavg']>0.274
```
## 資料前處理 - 2/3
```{python} 
#| echo: true
data = data.assign(high_rate=pd.Series(data['bavg']>0.274).values)
```

## 資料前處理 - 3/3

```{python} 
#| echo: true
print(data)
```

## 雙變量量化分析- 列聯表

左右撇子與打擊率高還是低的關係

`pd.crosstab(pandas資料序列1,pandas資料序列2)`

```{python} 
#| echo: true
pd.crosstab(data['handedness'],data['high_rate'])
```

## 量化的分析方式: 雙變量-相關性

全壘打數跟體重的關聯性（相關係數）

`pandas資料序列.corr(另一個pandas資料序列)`

```{python} 
#| echo: true
data['HR'].corr(data['weight'])
```

```{python} 
#| echo: true
data['HR'].corr(data['height'])
```

## 量化的分析方式 w/ Python

- 大多可用內建函數完成計算
- 但是在探索式分析時，常常需要**資料分組**
    - 觀察**男性**和**女性**的血壓差異
    - **A隊**與**B隊**的三分球命中率差異
    - **中鋒**和**後衛**的助攻次數
    - ...等
- 若只用基本的內建函數計算，相當耗時
    -   必須搭配pandas 內的 `groupby`


## groupby

以[房屋實價登錄資料](https://plvr.land.moi.gov.tw/DownloadOpenData)為例，首先先[桃園市不動產買賣](https://raw.githubusercontent.com/CGUIM-BigDataAnalysis/BigDataCGUIM/master/EMBA_BigData/Data/h_lvr_land_a.csv)

```{python} 
#| echo: true
house = pd.read_csv("https://raw.githubusercontent.com/CGUIM-BigDataAnalysis/BigDataCGUIM/master/EMBA_BigData/Data/h_lvr_land_a.csv")
print(house)
```
## 資料清理

```{python} 
#| echo: true
house=house[1:]
print(house)
```
## 資料清理

```{python} 
#| echo: true
house.info()
```

## 分組 pandas資料框.groupby()

- `pandas資料框.groupby(by=分組依據)`設定分組依據
- 計算各**鄉鎮市區**（以鄉鎮市區作為分組依據）的**交易筆數**、**總價元**


```{python} 
#| echo: true
house.groupby(by='鄉鎮市區')['總價元'].mean()
house.groupby(by='鄉鎮市區').size()
```

## 分組 pandas資料框.groupby()

- `pandas資料框.groupby(by=分組依據)`設定分組依據
- 計算各**鄉鎮市區**（以鄉鎮市區作為分組依據）的**交易筆數**、**總價元**
-   `pandas資料框.groupby(by=分組依據).agg(["計算1","計算2"])`

```{python} 
#| echo: true
house.groupby(by='鄉鎮市區')['總價元'].agg(["size","mean"])
```


## 分組 pandas資料框.groupby()

- 可設定**多個**分組依據
- 計算各**鄉鎮市區**各**交易標的**（以鄉鎮市區和交易標的作為分組依據）的**交易筆數**以及**平均總價元**
-   `pandas資料框.groupby(by=[分組依據1,分組依據2]).agg(["計算1","計算2"])`

```{python} 
#| echo: true
house.groupby(by=['鄉鎮市區','交易標的'])['總價元'].agg(["size","mean"])
```

## 排序 arrange()

排序功能，預設為**遞增排序**
```{r arrange1,eval=F}
arrange(AllOldData,總價元)
```
```{r arrange1.1,echo=F}
arrange1<-arrange(AllOldData,總價元)
knitr::kable(head(arrange1)) 
```

## 遞減排序 arrange()

使用`desc()`將要**遞減排序**的變數包起來，就可以遞減排序
```{r arrange2,eval=F}
arrange(AllOldData,desc(總價元))
```
```{r arrange2.1,echo=F}
arrange2<-arrange(AllOldData,desc(總價元))
knitr::kable(head(arrange2,3))
```

## 分組計算+子集綜合範例

- 結合分組、子集、統計運算，可完成一連串的資料分析
- 計算各**鄉鎮市區**各**交易標的**（以鄉鎮市區和交易標的作為分組依據）的交易筆數、平均總價元、平均單價元平方公尺，並依平均單價元平方公尺**由大到小排序**



## dplyr 綜合練習

type:alert
incremental:true

- 讀入[實價登錄預售屋](https://github.com/CGUIM-BigDataAnalysis/BigDataCGUIM/blob/master/EMBA_BigData/AllPreData.csv)資料
```{r,eval=F}
library(dplyr)
library(readr)
AllPreData<-read_csv("AllPreData.csv", ,
    col_types = cols(
      非都市土地使用分區= col_character(),
      非都市土地使用編定= col_character()
      )
)
```
- 試著用dplyr語法篩選出所有**建物型態為住宅大樓(11層含以上有電梯)**且**建物移轉總面積平方公尺 大於100**的交易資料
- 依**鄉鎮市區**分組，計算交易的平均**總價元**，平均**單價元平方公尺**
- 依平均**單價元平方公尺** **由大到小**排序
- 用pipe **%>%**


## Hands-on - 子集練習

- 讀入[實價登錄預售屋](https://github.com/CGUIM-BigDataAnalysis/BigDataCGUIM/blob/master/EMBA_BigData/AllPreData.csv)資料
```{r,eval=F}
library(dplyr)
library(readr)
AllPreData<-read_csv("AllPreData.csv", ,
           col_types = cols(
             非都市土地使用分區= col_character(),
              非都市土地使用編定= col_character()
              )
)
```
- 試著用dplyr語法篩選出所有**單價元平方公尺超過40萬**且**主要用途為住家用**的預售屋買賣資料
- 只留下鄉鎮市區 開頭為**土地** 以及開頭為**交易** 的 欄位



## Hands-on - 子集後計算練習

- 讀入[實價登錄預售屋](https://github.com/CGUIM-BigDataAnalysis/BigDataCGUIM/blob/master/EMBA_BigData/AllPreData.csv)資料
```{r,eval=F}
library(dplyr)
library(readr)
AllPreData<-read_csv("AllPreData.csv", ,
           col_types = cols(
             非都市土地使用分區= col_character(),
              非都市土地使用編定= col_character()
              )
)
```
- 試著用dplyr語法篩選出所有**單價元平方公尺超過40萬**且**主要用途為住家用**的預售屋買賣資料
- 計算這些房屋的**平均建物移轉總面積平方公尺**，**平均土地移轉總面積平方公尺**


